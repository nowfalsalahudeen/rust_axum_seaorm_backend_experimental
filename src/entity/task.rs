//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use crate::entity::task;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "task")]
pub struct Model {
  #[sea_orm(primary_key)]
  pub id: i32,
  pub title: String,
  pub description: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

impl task::Model {
  pub async fn all(_db: &DatabaseConnection) -> Result<Vec<String>, DbErr> {
    Ok(Vec::from(["String".to_string()]))
  }
}
